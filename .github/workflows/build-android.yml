name: Android CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'wp-android-emini/app/src/**'
      - 'wp-android-emini/app/src/build.gradle.kts'
      - 'wp-android-emini/app/src/proguard-rules.pro'
      - 'wp-android-emini/gradle/**'
      - 'wp-android-emini/build.gradle.kts'
      - 'wp-android-emini/settings.gradle.kts'

  pull_request:
    branches: [ "main" ]
    paths:
      - 'wp-android-emini/app/src/**'
      - 'wp-android-emini/app/src/build.gradle.kts'
      - 'wp-android-emini/app/src/proguard-rules.pro'
      - 'wp-android-emini/gradle/**'
      - 'wp-android-emini/build.gradle.kts'
      - 'wp-android-emini/settings.gradle.kts'

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  
jobs:

  build-rust-backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install build-ndk
      run: cargo install cargo-ndk

    - name: Install toolchains
      run: |
        rustup target add \
          aarch64-linux-android \
          armv7-linux-androideabi \
          x86_64-linux-android \
          i686-linux-android

    - name: Build
      working-directory: ./wp-backend-rs-emini 
      run: cargo ndk --platform 29 -t armeabi-v7a -t arm64-v8a -t x86 -t x86_64 -o ./jniLibs build --release
      
    - name: Generate Kotlin Bindings
      working-directory: ./wp-backend-rs-emini 
      run: |
        cargo run --bin uniffi-bindgen generate wp-epub-mini/src/wp_epub_mini.udl --language kotlin --out-dir ./bindings/
  
    - name: Show all folders
      run: Get-ChildItem -Recurse
      shell: pwsh

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-builds
        path: |
          ./wp-backend-rs-emini/jniLibs
          ./wp-backend-rs-emini/bindings
        if-no-files-found: error

  build-android:
    needs: build-rust-backend
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download backend artifacts
      uses: actions/download-artifact@v4
      with:
        name: backend-builds
        path: ./backend-artifacts # Download to a temporary folder

    - name: Integrate Rust libraries and bindings
      run: |
        echo "Copying native libraries..."
        # Create the destination directory if it doesn't exist
        mkdir -p ./wp-android-emini/app/src/main/jniLibs/
        # Copy the native libraries
        cp -r ./backend-artifacts/jniLibs/* ./wp-android-emini/app/src/main/jniLibs/
        
        echo "Copying Kotlin bindings..."
        # Create the destination directory if it doesn't exist
        mkdir -p ./wp-android-emini/app/src/main/java/uniffi/
        # Copy the Kotlin bindings
        cp -r ./backend-artifacts/bindings/uniffi/* ./wp-android-emini/app/src/main/java/uniffi/
        
    - name: set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'oracle'
        cache: gradle

    - name: Grant execute permission for gradlew
      working-directory: ./wp-android-emini
      run: chmod +x gradlew
      
    - name: Assemble debug apk with Gradle
      working-directory: ./wp-android-emini
      run: ./gradlew assembleDebug

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: wp-android-emini/app/build/outputs/apk/debug/*.apk
        if-no-files-found: error
